@model PagedList.IPagedList<ERP.Models.Vdr>
@using PagedList.Mvc;
@using ERP.Helpers;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<style>
    .ColumnToggleCbx {
    }

    .HighLight {
        color: red;
    }
</style>

@{
    string Title = "廠商列表";
    ViewBag.Title = Title;
}

<h2>@Title</h2>

@using (Html.BeginForm("List", "Vdrs", FormMethod.Get))
{
    <p>
        @Html.ActionLink("新增廠商", "Create")
        <text>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</text>
        Find by 編號/名稱: @Html.TextBox("Filter", (string)ViewData["Filter"])
        <input type="submit" value="搜尋" />
    </p>
}

@*Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount*@
@Html.PagedListPager(Model, page => Url.Action("List", new { page, SortOrder = ViewData["SortOrder"], Filter = ViewData["Filter"] }))

<table class="table">
    <tr>
        <th name="@Html.IdFor(model => model.First().VdrNo)">
            @Html.ActionLink(Html.DisplayNameFor(model => model.First().VdrNo).ToString(), "List", new { SortOrder = ViewData["VdrNo_SortOrder"], Filter = ViewData["Filter"] })
        </th>
        <th name="@Html.IdFor(model => model.First().VdrNa)">
            @Html.ActionLink(Html.DisplayNameFor(model => model.First().VdrNa).ToString(), "List", new { SortOrder = ViewData["VdrNa_SortOrder"], Filter = ViewData["Filter"] })
        </th>
        <th name="@Html.IdFor(model => model.First().VdrId)">
            @Html.ActionLink(Html.DisplayNameFor(model => model.First().VdrId).ToString(), "List", new { SortOrder = ViewData["VdrId_SortOrder"], Filter = ViewData["Filter"] })
        </th>
        <th name="@Html.IdFor(model => model.First().VdrTel)">
            @Html.ActionLink(Html.DisplayNameFor(model => model.First().VdrTel).ToString(), "List", new { SortOrder = ViewData["VdrTel_SortOrder"], Filter = ViewData["Filter"] })
        </th>
        <th name="@Html.IdFor(model => model.First().VdrRmaTel)">
            @Html.ActionLink(Html.DisplayNameFor(model => model.First().VdrRmaTel).ToString(), "List", new { SortOrder = ViewData["VdrRmaTel_SortOrder"], Filter = ViewData["Filter"] })
        </th>
        <th name="@Html.IdFor(model => model.First().VdrSalNa)">
            @Html.ActionLink(Html.DisplayNameFor(model => model.First().VdrSalNa).ToString(), "List", new { SortOrder = ViewData["VdrSalNa_SortOrder"], Filter = ViewData["Filter"] })
        </th>
        <th name="@Html.IdFor(model => model.First().VdrSalTel)">
            @Html.ActionLink(Html.DisplayNameFor(model => model.First().VdrSalTel).ToString(), "List", new { SortOrder = ViewData["VdrSalTel_SortOrder"], Filter = ViewData["Filter"] })
        </th>
        <th name="@Html.IdFor(model => model.First().VdrUrl)">
            @Html.ActionLink(Html.DisplayNameFor(model => model.First().VdrUrl).ToString(), "List", new { SortOrder = ViewData["VdrUrl_SortOrder"], Filter = ViewData["Filter"] })
        </th>
        <th name="@Html.IdFor(model => model.First().VdrAdr)">
            @Html.ActionLink(Html.DisplayNameFor(model => model.First().VdrAdr).ToString(), "List", new { SortOrder = ViewData["VdrAdr_SortOrder"], Filter = ViewData["Filter"] })
        </th>
        <th name="@Html.IdFor(model => model.First().VdrDtPay)">
            @Html.ActionLink(Html.DisplayNameFor(model => model.First().VdrDtPay).ToString(), "List", new { SortOrder = ViewData["VdrDtPay_SortOrder"], Filter = ViewData["Filter"] })
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td name="@Html.IdFor(model => model.First().VdrNo)">
                @Html.HightlightKeyWord(Html.DisplayFor(modelItem => item.VdrNo).ToHtmlString(), (string)ViewData["Filter"], "HighLight")
            </td>
            <td name="@Html.IdFor(model => model.First().VdrNa)">
                @Html.HightlightKeyWord(Html.DisplayFor(modelItem => item.VdrNa).ToHtmlString(), (string)ViewData["Filter"], "HighLight")
            </td>
            <td name="@Html.IdFor(model => model.First().VdrId)">
                @Html.DisplayFor(modelItem => item.VdrId)
            </td>
            <td name="@Html.IdFor(model => model.First().VdrTel)">
                @Html.DisplayFor(modelItem => item.VdrTel)
            </td>
            <td name="@Html.IdFor(model => model.First().VdrRmaTel)">
                @Html.DisplayFor(modelItem => item.VdrRmaTel)
            </td>
            <td name="@Html.IdFor(model => model.First().VdrSalNa)">
                @Html.DisplayFor(modelItem => item.VdrSalNa)
            </td>
            <td name="@Html.IdFor(model => model.First().VdrSalTel)">
                @Html.DisplayFor(modelItem => item.VdrSalTel)
            </td>
            <td name="@Html.IdFor(model => model.First().VdrUrl)">
                @Html.DisplayFor(modelItem => item.VdrUrl)
            </td>
            <td name="@Html.IdFor(model => model.First().VdrAdr)">
                @Html.DisplayFor(modelItem => item.VdrAdr)
            </td>
            <td name="@Html.IdFor(model => model.First().VdrDtPay)">
                @Html.DisplayFor(modelItem => item.VdrDtPay)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.VdrNo }) |
                @Html.ActionLink("Details", "Details", new { id = item.VdrNo }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.VdrNo })
            </td>
        </tr>
    }
</table>

@Html.PagedListPager(Model, page => Url.Action("List", new { page, SortOrder = ViewData["SortOrder"], Filter = ViewData["Filter"] }))
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@*Toggle欄位*@
<div style="position:absolute;top:262px;right:0px">
    <div class="ColumnToggleCbx">
        <input type="checkbox" name="CbxVdrNo" id="VdrNo" checked onclick="ColumnToggle(this)" />
        <label for="VdrNo">
            @Html.DisplayNameFor(model => model.First().VdrNo)
        </label>
    </div>
    <div class="ColumnToggleCbx">
        <input type="checkbox" name="CbxVdrNa" id="VdrNa" checked onclick="ColumnToggle(this)" />
        <label for="VdrNa">
            @Html.DisplayNameFor(model => model.First().VdrNa)
        </label>
    </div>
    <div class="ColumnToggleCbx">
        <input type="checkbox" name="CbxVdrId" id="VdrId" checked onclick="ColumnToggle(this)" />
        <label for="VdrId">
            @Html.DisplayNameFor(model => model.First().VdrId)
        </label>
    </div>
    <div class="ColumnToggleCbx">
        <input type="checkbox" name="CbxVdrTel" id="VdrTel" checked onclick="ColumnToggle(this)" />
        <label for="VdrTel">
            @Html.DisplayNameFor(model => model.First().VdrTel)
        </label>
    </div>
    <div class="ColumnToggleCbx">
        <input type="checkbox" name="CbxVdrRmaTel" id="VdrRmaTel" checked onclick="ColumnToggle(this)" />
        <label for="VdrRmaTel">
            @Html.DisplayNameFor(model => model.First().VdrRmaTel)
        </label>
    </div>
    <div class="ColumnToggleCbx">
        <input type="checkbox" name="CbxVdrSalNa" id="VdrSalNa" checked onclick="ColumnToggle(this)" />
        <label for="VdrSalNa">
            @Html.DisplayNameFor(model => model.First().VdrSalNa)
        </label>
    </div>
    <div class="ColumnToggleCbx">
        <input type="checkbox" name="CbxVdrSalTel" id="VdrSalTel" checked onclick="ColumnToggle(this)" />
        <label for="VdrSalTel">
            @Html.DisplayNameFor(model => model.First().VdrSalTel)
        </label>
    </div>
    <div class="ColumnToggleCbx">
        <input type="checkbox" name="CbxVdrUrl" id="VdrUrl" checked onclick="ColumnToggle(this)" />
        <label for="VdrUrl">
            @Html.DisplayNameFor(model => model.First().VdrUrl)
        </label>
    </div>
    <div class="ColumnToggleCbx">
        <input type="checkbox" name="CbxVdrAdr" id="VdrAdr" checked onclick="ColumnToggle(this)" />
        <label for="VdrAdr">
            @Html.DisplayNameFor(model => model.First().VdrAdr)
        </label>
    </div>
    <div class="ColumnToggleCbx">
        <input type="checkbox" name="CbxVdrDtPay" id="VdrDtPay" checked onclick="ColumnToggle(this)" />
        <label for="VdrDtPay">
            @Html.DisplayNameFor(model => model.First().VdrDtPay)
        </label>
    </div>
</div>

<script src="~/scripts/jquery-1.10.2.js"></script>
<script>
    //顯示或隱藏欄位
    function ColumnToggle(me) {
        ChangeCbx(me)
        if (document.getElementById(me.id).checked) {
            var obj = document.getElementsByName(me.id)
            for (var i = 0; i < obj.length; i++) {
                obj[i].style.display = "table-cell"
            }
        }
        else {
            var obj = document.getElementsByName(me.id)
            for (var i = 0; i < obj.length; i++) {
                obj[i].style.display = "none"
            }
        }
    }


    //設定CheckBox的狀態
    function SetCbx() {
        var CbxToggleNoResult = GetCbxFromCookie()
        if ((CbxToggleNoResult & parseInt('0000000001', 2)) == parseInt('0000000001', 2)) {
            document.getElementById('VdrNo').checked = true
        }
        else {
            document.getElementById('VdrNo').checked = false
        }
        ColumnToggle(document.getElementById('VdrNo'))

        if ((CbxToggleNoResult & parseInt('0000000010', 2)) == parseInt('0000000010', 2)) {
            document.getElementById('VdrNa').checked = true
        }
        else {
            document.getElementById('VdrNa').checked = false
        }

        if ((CbxToggleNoResult & parseInt('0000000100', 2)) == parseInt('0000000100', 2)) {
            document.getElementById('VdrId').checked = true
        }
        else {
            document.getElementById('VdrId').checked = false
        }

        if ((CbxToggleNoResult & parseInt('0000001000', 2)) == parseInt('0000001000', 2)) {
            document.getElementById('VdrTel').checked = true
        }
        else {
            document.getElementById('VdrTel').checked = false
        }

        if ((CbxToggleNoResult & parseInt('0000010000', 2)) == parseInt('0000010000', 2)) {
            document.getElementById('VdrRmaTel').checked = true
        }
        else {
            document.getElementById('VdrRmaTel').checked = false
        }

        if ((CbxToggleNoResult & parseInt('0000100000', 2)) == parseInt('0000100000', 2)) {
            document.getElementById('VdrSalNa').checked = true
        }
        else {
            document.getElementById('VdrSalNa').checked = false
        }

        if ((CbxToggleNoResult & parseInt('0001000000', 2)) == parseInt('0001000000', 2)) {
            document.getElementById('VdrSalTel').checked = true
        }
        else {
            document.getElementById('VdrSalTel').checked = false
        }

        if ((CbxToggleNoResult & parseInt('0010000000', 2)) == parseInt('0010000000', 2)) {
            document.getElementById('VdrUrl').checked = true
        }
        else {
            document.getElementById('VdrUrl').checked = false
        }

        if ((CbxToggleNoResult & parseInt('0100000000', 2)) == parseInt('0100000000', 2)) {
            document.getElementById('VdrAdr').checked = true
        }
        else {
            document.getElementById('VdrAdr').checked = false
        }

        if ((CbxToggleNoResult & parseInt('1000000000', 2)) == parseInt('1000000000', 2)) {
            document.getElementById('VdrDtPay').checked = true
        }
        else {
            document.getElementById('VdrDtPay').checked = false
        }
    }

    //點選CheckBox時，將現況同步至cookie中
    function ChangeCbx(me) {
        var CbxToggleNoResult = GetCbxFromCookie()

        if (me.id == 'VdrNo') {
            if (document.getElementById(me.id).checked) {
                CbxToggleNoResult = CbxToggleNoResult | parseInt('0000000001', 2)
            }
            else {
                CbxToggleNoResult = CbxToggleNoResult & parseInt('1111111110', 2)
            }
        }
        else if (me.id == 'VdrNa') {
            if (document.getElementById(me.id).checked) {
                CbxToggleNoResult = CbxToggleNoResult | parseInt('0000000010', 2)
            }
            else {
                CbxToggleNoResult = CbxToggleNoResult & parseInt('1111111101', 2)
            }
        }
        else if (me.id == 'VdrId') {
            if (document.getElementById(me.id).checked) {
                CbxToggleNoResult = CbxToggleNoResult | parseInt('0000000100', 2)
            }
            else {
                CbxToggleNoResult = CbxToggleNoResult & parseInt('1111111011', 2)
            }
        }
        else if (me.id == 'VdrTel') {
            if (document.getElementById(me.id).checked) {
                CbxToggleNoResult = CbxToggleNoResult | parseInt('0000001000', 2)
            }
            else {
                CbxToggleNoResult = CbxToggleNoResult & parseInt('1111110111', 2)
            }
        }
        else if (me.id == 'VdrRmaTel') {
            if (document.getElementById(me.id).checked) {
                CbxToggleNoResult = CbxToggleNoResult | parseInt('0000010000', 2)
            }
            else {
                CbxToggleNoResult = CbxToggleNoResult & parseInt('1111101111', 2)
            }
        }
        else if (me.id == 'VdrSalNa') {
            if (document.getElementById(me.id).checked) {
                CbxToggleNoResult = CbxToggleNoResult | parseInt('0000100000', 2)
            }
            else {
                CbxToggleNoResult = CbxToggleNoResult & parseInt('1111011111', 2)
            }
        }
        else if (me.id == 'VdrSalTel') {
            if (document.getElementById(me.id).checked) {
                CbxToggleNoResult = CbxToggleNoResult | parseInt('0001000000', 2)
            }
            else {
                CbxToggleNoResult = CbxToggleNoResult & parseInt('1110111111', 2)
            }
        }
        else if (me.id == 'VdrUrl') {
            if (document.getElementById(me.id).checked) {
                CbxToggleNoResult = CbxToggleNoResult | parseInt('0010000000', 2)
            }
            else {
                CbxToggleNoResult = CbxToggleNoResult & parseInt('1101111111', 2)
            }
        }
        else if (me.id == 'VdrAdr') {
            if (document.getElementById(me.id).checked) {
                CbxToggleNoResult = CbxToggleNoResult | parseInt('0100000000', 2)
            }
            else {
                CbxToggleNoResult = CbxToggleNoResult & parseInt('1011111111', 2)
            }
        }
        else if (me.id == 'VdrDtPay') {
            if (document.getElementById(me.id).checked) {
                CbxToggleNoResult = CbxToggleNoResult | parseInt('1000000000', 2)
            }
            else {
                CbxToggleNoResult = CbxToggleNoResult & parseInt('0111111111', 2)
            }
        }

        document.cookie = 'Cbx=' + CbxToggleNoResult
    }

    //從cookie中讀出值
    function GetCbxFromCookie() {
        var cookies = document.cookie.split(';')
        var cs
        for (var i = 0; i < cookies.length; i++) {
            cs = cookies[i]
            //確認是否找到對應的cookie
            if (cs.includes('Cbx')) {
                //找到對應的cookie(Cbx=1111111111)後，將值取出
                var CbxResult = cs.split('=')[1]
                //找到Cbx=後，如果=右邊是空值，就給定初始值
                if (CbxResult == '') {
                    return parseInt('1111111111', 2)
                }
                else {
                    return CbxResult
                }
                break
            }
            else {
                if (i == cookies.length - 1) {
                    //未給定cookie的值，從這邊給定該cookie的初始值
                    return parseInt('1111111111', 2)
                }
            }
        }
    }

    //每次讀取頁面時，就會執行設定CheckBox的動作
    $(document).ready(function () {
        SetCbx()

    });

</script>